name: build-check

on:
  push:

jobs:
  clang-checks:
    name: Clang Format
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Clang tools
        run: sudo apt-get update && sudo apt-get install -y clang-format

      - name: Run clang-format check
        run: |
          FILES=$(find . -name '*.[ch]pp' -o -name '*.[ch]')
          FORMAT_ERRORS=0
          for FILE in $FILES; do
            if ! clang-format -style=file "$FILE" | diff -q "$FILE" - > /dev/null; then
              echo "Formatting issue in $FILE"
              FORMAT_ERRORS=1
            fi
          done
          if [ "$FORMAT_ERRORS" -ne 0 ]; then
            echo "❌ Clang-format check failed."
            exit 1
          else
            echo "✅ Clang-format check passed."
          fi

  clang-tidy:
    name: Clang Tidy Checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Clang tools
        run: sudo apt-get update && sudo apt-get install -y clang-tidy

      - name: Setup Xmake
        uses: xmake-io/github-action-setup-xmake@v1
        with:
          xmake-version: latest

      - name: Export compile_commands.json with XMake
        run: |
          xmake f -y
          xmake project -k compile_commands

      - name: Run clang-tidy check
        run: |
          FILES=$(find src -name '*.cpp')
          TIDY_ERRORS=0
          for FILE in $FILES; do
            if ! clang-tidy "$FILE" --config-file=.clang-tidy -p .; then
              echo "Clang-tidy issue in $FILE"
              TIDY_ERRORS=1
            fi
          done
          if [ "$TIDY_ERRORS" -ne 0 ]; then
            echo "❌ Clang-tidy check failed."
            exit 1
          else
            echo "✅ Clang-tidy check passed."
          fi
